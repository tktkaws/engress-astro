---
---

<section class="topFaq">
  <h2 class="title">よくある質問</h2>
  <details class="js-details">
    <summary class="js-summary">
      <span class="summary_inner">
        Engressはサラリーマンでも学習を続けられるでしょうか？<span class="icon"
        ></span>
      </span>
    </summary>
    <div class="content js-content">
      <div class="content_inner">
        Engressは各個人に最適な学習プランをご提供しております。サラリーマンの方でも継続できます。
      </div>
    </div>
  </details>

  <details class="js-details">
    <summary class="js-summary">
      <span class="summary_inner">
        教材はオリジナルのものを使用しているのでしょうか？<span class="icon"
        ></span>
      </span>
    </summary>
    <div class="content js-content">
      <div class="content_inner">
        Engressは各個人に最適な学習プランをご提供しております。サラリーマンの方でも継続できます。
      </div>
    </div>
  </details>

  <details class="js-details">
    <summary class="js-summary">
      <span class="summary_inner">
        講師に日本人はいますか？<span class="icon"></span>
      </span>
    </summary>
    <div class="content js-content">
      <div class="content_inner">
        Engressは各個人に最適な学習プランをご提供しております。サラリーマンの方でも継続できます。
      </div>
    </div>
  </details>
  <details class="js-details">
    <summary class="js-summary">
      <span class="summary_inner">
        TOEFL以外の海外大学合格のサポートもしてもらえるのでしょうか？<span
          class="icon"></span>
      </span>
    </summary>
    <div class="content js-content">
      <div class="content_inner">
        Engressは各個人に最適な学習プランをご提供しております。サラリーマンの方でも継続できます。
      </div>
    </div>
  </details>
</section>

<style lang="scss">
  section {
    display: flex;
    justify-content: center;
    display: grid;
    grid-template-columns: 1fr 900px 1fr;
    @media only screen and (max-width: 1000px) {
      grid-template-columns: 1fr 90% 1fr;
    }
  }
  section > * {
    grid-column: 2;
  }
  .title {
    font-size: fluid(18, 36, 320, 767);
    font-weight: bold;
    margin-top: 75px;
    text-align: center;
  }
  .js-details:first-of-type {
    margin-top: 32px;
  }
  summary {
    display: block;
  }

  summary::-webkit-details-marker {
    /* Safariで表示されるデフォルトの三角形アイコンを消去 */
    display: none;
  }
  .summary_inner {
    cursor: pointer;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 30px 24px;
    padding-left: 0px;
    border-top: 1px solid $c-sub-black;
    font-size: fluid(12, 16, 320, 767);
  }
  .icon {
    display: block;
    position: relative;
    width: 24px;
    margin-left: 24px;
    flex-shrink: 0;
    transform-origin: center 43%;
    transition: transform 0.4s;
    @media only screen and (max-width: 1000px) {
      margin-top: -10px;
    }
  }
  .icon::before,
  .icon::after {
    content: "";
    position: absolute;
    display: block;
    width: 25px;
    height: 3px;
    background-color: $c-sub-black;
  }

  .icon::before {
    left: 0;
  }

  .icon::after {
    right: -1px;
    transform: rotate(90deg);
  }

  details[open] .icon::after {
    transform: rotate(180deg);
  }
  .content {
    overflow: hidden;
  }

  .content_inner {
    background-color: $c-sub;
    padding: 24px 24px;
    margin-bottom: 16px;
    display: flex;
    flex-direction: column;
    gap: 16px;
    font-size: fluid(12, 16, 320, 767);
  }
</style>

<script>
  import { gsap } from "gsap";

  document.addEventListener("DOMContentLoaded", () => {
    setUpAccordion();
  });

  const setUpAccordion = () => {
    const details = document.querySelectorAll(".js-details");
    const IS_OPENED_CLASS = "is-opened";

    details.forEach((element) => {
      const summary = element.querySelector(".js-summary");
      const content = element.querySelector(".js-content");

      summary.addEventListener("click", (event) => {
        event.preventDefault();

        if (element.classList.contains(IS_OPENED_CLASS)) {
          element.classList.toggle(IS_OPENED_CLASS);

          closingAnim(content, element).restart();
        } else {
          element.classList.toggle(IS_OPENED_CLASS);

          element.setAttribute("open", "true");

          openingAnim(content).restart();
        }
      });
    });
  };

  /**
   * アコーディオンを閉じる時のアニメーション
   */
  const closingAnim = (content, element) =>
    gsap.to(content, {
      height: 0,
      opacity: 0,
      duration: 0.4,
      ease: "power3.out",
      overwrite: true,
      onComplete: () => {
        element.removeAttribute("open");
      },
    });

  /**
   * アコーディオンを開く時のアニメーション
   */
  const openingAnim = (content) =>
    gsap.fromTo(
      content,
      {
        height: 0,
        opacity: 0,
      },
      {
        height: "auto",
        opacity: 1,
        duration: 0.4,
        ease: "power3.out",
        overwrite: true,
      }
    );
</script>
